import numpy as np
import networkx as nx
import matplotlib.pyplot as plt

def SBM(N, M, q0, q1):
    '''This function is designed to generate the Stochastic Block Model.
    input params (consistent with the project description):
    N (int): the number of individuals
    M (int): the number of subgroups
    q0 (float): probability of intra-subgroup connection
    q1 (float): probability of inter-subgroup connection

    output:
    G (N*N): adjacency matrix of the generated graph
    '''
    # Initialize the adjacency matrix with zeros
    G = np.zeros((N, N))
    
    # Determine the size of each subgroup (almost equal size)
    sizes = [N // M + (1 if i < N % M else 0) for i in range(M)]
    
    # Compute the starting index of each subgroup
    indices = np.cumsum([0] + sizes)
    
    # Fill in the adjacency matrix
    for i in range(M):
        for j in range(i, M):
            if i == j:
                # Intra-subgroup connections
                G[indices[i]:indices[i+1], indices[j]:indices[j+1]] = np.random.rand(sizes[i], sizes[j]) < q0
            else:
                # Inter-subgroup connections
                G[indices[i]:indices[i+1], indices[j]:indices[j+1]] = np.random.rand(sizes[i], sizes[j]) < q1
                G[indices[j]:indices[j+1], indices[i]:indices[i+1]] = G[indices[i]:indices[i+1], indices[j]:indices[j+1]].T
    
    # Ensure the diagonal elements are zero (no self-loops)
    np.fill_diagonal(G, 0)
    
    return G


def visualize_graph(G):
    """
    Function to visualize the adjacency matrix of a graph generated by the Stochastic Block Model.

    Parameters:
    G (np.ndarray): Adjacency matrix of the graph.

    Returns:
    None
    """
    graph = nx.from_numpy_array(G)

    # Draw the graph
    plt.figure(figsize=(2, 2))  # Further reduced the figure size
    pos = nx.spring_layout(graph, seed=42)  # Position nodes using a spring layout
    nx.draw(graph, pos, with_labels=True, node_color='skyblue', node_size=200, edge_color='gray', linewidths=0.75, font_size=7)
    plt.title("Visualization of Stochastic Block Model (SBM) Graph")
    plt.show()